<?php

/**
 * Implementation of hook_field_info()
 */
function backgroundfield_field_info() {
  return array(
    'backgroundfield' => array(
      'label' => t('BackgroundField'),
      'description' => t('Defines a background image field with associated css settings'),
      'settings' => array(
        'uri_scheme' => variable_get('file_default_scheme', 'public'),
        'default_image' => 0,
      ),
      'instance_settings' => array(
        'file_extensions' => 'png gif jpg jpeg',
        'file_directory' => '',
        'max_filesize' => '',
        'max_resolution' => '',
        'min_resolution' => '',
        'css_selector' => '',
        'css_repeat' => '',
        'css_h_position' => '',
        'css_v_position' => '',
        'css_attachment' => '',
      ),
      'default_widget' => 'backgroundfield_widget',
      'default_formatter' => 'backgroundfield_formatter',
    ),
  );
} // backgroundfield_field_info()


/**
 * hook_field_settings_form()
 */
function backgroundfield_field_settings_form($field, $instance, $has_data) {
  $form = image_field_settings_form($field, $instance, $has_data);
  $settings = $field['settings'];
  $form['css_selector'] = array(
    '#type' => 'textfield',
    '#title' => t('CSS Selector'),
    '#default_value' => (isset($settings['css_selector']))? $settings['css_selector'] : 'body',
    '#description' => t('Enter a CSS selector to select the page element(s) to apply the background image. For example: .content'),
    '#required' => TRUE,
  );  
  $form['repeat'] = array(
    '#type' => 'radios',
    '#title' => t('Repeat'),
    '#default_value' => (isset($settings['repeat']))? $settings['repeat'] : 'repeat',
    '#options' => array(
      'repeat' => t('Repeat'),
      'repeat-x' => t('Repeat Horizontally'),
      'repeat-y' => t('Repeat Vertically'),
      'no-repeat' => t('No Repeat')
    ),  
    '#required' => TRUE,
  );  
  $form['h_position'] = array(
    '#type' => 'radios',
    '#title' => t('Horizontal Position'),
    '#default_value' => (isset($settings['h_position']))? $settings['h_position'] : 'left',
    '#options' => array(
      'left' => t('Left'),
      'center' => t('Center'),
      'right' => t('Right')
    ),  
    '#required' => TRUE,
  );  
  $form['v_position'] = array(
    '#type' => 'radios',
    '#title' => t('Vertical Position'),
    '#default_value' => (isset($settings['v_position']))? $settings['v_position'] : 'top',
    '#options' => array(
      'top' => t('Top'),
      'center' => t('Center'),
      'bottom' => t('Bottom')
    ),  
    '#required' => TRUE,
  ); 
  $form['attachment'] = array(
    '#type' => 'radios',
    '#title' => t('Attachment'),
    '#default_value' => (isset($settings['attachment']))? $settings['attachment'] : 'scroll',
    '#options' => array(
      'scroll' => t('Scroll'),
      'fixed' => t('Fixed'),
    ),
    '#required' => TRUE,
  );
  return $form;
}


/**
 * Implements hook_field_widget_info()
 */
function backgroundfield_field_widget_info() {
  return array(
    'backgroundfield' => array(
      'label' => t('Background Field'),
      'field types' => array('backgroundfield'),
      'description' => t('Allows users to apply a background image to a field defined css selector'),
    ),
  );
}

/**
 * Implements hook_field_widget_settings_form()
 */
function backgroundfield_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  return image_field_widget_form($form, $form_state, $field, $instance, $langcode, $items, $delta, $element);
}

/*
 * Implementation of hook_field_is_empty().
 */
function backgroundfield_field_is_empty($item, $field) {
  return image_field_is_empty($item, $field);
}

/**
 * Implementation of hook_field_formatter_info()
 */
function backgroundfield_field_formatter_info() {
  return array(
    'default' => array(
      'label' => t('Background Field'),
      'field types' => array('backgroundfield'),
    ),
  );
}

/**
 * Immplementation of hook_field_formatter_view()
 */
function backgroundfield_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  dpm($display);
}
